<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdcourtyard.business.clientmessage.dao.ClientNeedreturnDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		needId,clientId,needreturnTime,createTime
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insertClientNeedreturn">
	    <![CDATA[
	        INSERT INTO client_needreturn ( 
	        	needId,clientId,needreturnTime,createTime
	        ) VALUES (
	        	#{needId} ,
	        	#{clientId} ,
	        	#{needreturnTime} ,
	        	#{createTime} 
	        )
	    ]]>
	</insert>

	<!-- 批量保存 -->
	<insert id="insertClientNeedreturnBatch">
	    <![CDATA[
	        INSERT INTO client_needreturn (
	        	needId,clientId,needreturnTime,createTime
	        ) VALUES 
	         ]]>
		<foreach item="item" collection="list" separator=",">
			(
						#{item.needId} ,
						#{item.clientId} ,
						#{item.needreturnTime} ,
						#{item.createTime} 
			)
		</foreach>

	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<if
				test="clientId != null and clientId != ''">
				clientId = #{clientId}
				,
			</if>
			<if test="needreturnTime != null">
				needreturnTime = #{needreturnTime} ,
			</if>
			<if test="createTime != null">
				createTime = #{createTime} 
			</if>
		</set>
	</sql>

    <!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->
	<!-- where 条件组合 -->
	<sql id="where_sql">
		<where>
			<if
				test="clientNeedreturn.clientId != null and clientNeedreturn.clientId != ''">
				clientId = #{clientNeedreturn.clientId}				 
			</if>
			<if test="clientNeedreturn.needreturnTime != null">
				 and needreturnTime = #{clientNeedreturn.needreturnTime} 
			</if>
			<if test="clientNeedreturn.createTime != null">
				 and createTime = #{clientNeedreturn.createTime} 
			</if>
		</where>
	</sql>

	<!-- 修改 -->
	<update id="updateClientNeedreturnById">
		UPDATE client_needreturn
		<include refid="update_sql" />
		WHERE
		needId =
		#{needId} 	</update>

	<!-- 根据ID删除 -->
	<delete id="deleteClientNeedreturnById">
		DELETE FROM client_needreturn
		WHERE
		needId = #{needId} 	</delete>



	<!-- selsect -->
	<select id="getClientNeedreturnById" resultType="com.bdcourtyard.business.clientmessage.model.ClientNeedreturn">
		SELECT
		<include refid="columns" />
		FROM client_needreturn
		WHERE
		needId = #{needId} 	</select>

	<!-- selsect -->
	<select id="getClientNeedreturns" resultType="com.bdcourtyard.business.clientmessage.model.ClientNeedreturn">
		SELECT
		<include refid="columns" />
		FROM client_needreturn
		<include refid="where_sql" />
	</select>
	
			<!-- selsect -->
	<select id="getClientNeedreturnsForPage" resultType="com.bdcourtyard.business.clientmessage.model.ClientNeedreturn">
		SELECT
		<include refid="columns" />
		FROM client_needreturn
		<include refid="where_sql" />
	</select>

	<select id="getClientNeedreturnsByConditions" resultType="com.bdcourtyard.business.clientmessage.model.ClientNeedreturn">
		SELECT
		<include refid="columns" />
		FROM client_needreturn
		WHERE 
			1 =1
		<foreach collection="conditions" item="condition">
			{condition.exp}
		</foreach>
	</select>

	<!--根据关联id得到相关数据 -->
	<select id="getClientNeedreturnsByclientId" resultType="com.bdcourtyard.business.clientmessage.model.ClientNeedreturn">
		SELECT
		<include refid="columns" />
		FROM client_needreturn
		WHERE
		clientId = #{clientId}
	</select>

	<!--清空 -->
	<delete id="deleteClientNeedreturnByclientId">
		DELETE FROM client_needreturn
		WHERE
		clientId = #{clientId} 	</delete>
</mapper>

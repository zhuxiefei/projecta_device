<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdcourtyard.business.clientmessage.dao.ControlClientEnteringDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
		clientId,clientName,clientAge,clientGender,clientLooks,clientPhone,idCard,information,clientFamily,familyStructure,dwellResidential,workResidential,vehicle,motive,emphasis,demandProduct,demandHouse,demandDiscount,demandTotal,demandFllor,productReflect,productRecommendRoomNumber,productRecommendHouseType,productRecommendProportion,productRecommendUnitPrice,productRecommendTotalPrices,receivingRecords,clientRank,clientInauguration,inaugurationName,duty,clientState,imputTime,returnVisit,trace,bargain,unsubmittedFactor,confirm,remark,estateId,emphasisRests,clientInaugurationRests,unsubmittedFactorRests,counselor,informationRests
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insertControlClientEntering">
		<![CDATA[
	        INSERT INTO control_client_entering (
	        	clientId,clientName,clientAge,clientGender,clientLooks,clientPhone,idCard,information,clientFamily,familyStructure,dwellResidential,workResidential,vehicle,motive,emphasis,demandProduct,demandHouse,demandDiscount,demandTotal,demandFllor,productReflect,productRecommendRoomNumber,productRecommendHouseType,productRecommendProportion,productRecommendUnitPrice,productRecommendTotalPrices,receivingRecords,clientRank,clientInauguration,inaugurationName,duty,clientState,imputTime,returnVisit,trace,bargain,unsubmittedFactor,confirm,remark,estateId,emphasisRests,clientInaugurationRests,unsubmittedFactorRests,counselor,informationRests
	        ) VALUES (
	        	#{clientId} ,
	        	#{clientName} ,
	        	#{clientAge} ,
	        	#{clientGender} ,
	        	#{clientLooks} ,
	        	#{clientPhone} ,
	        	#{idCard} ,
	        	#{information} ,
	        	#{clientFamily} ,
	        	#{familyStructure} ,
	        	#{dwellResidential} ,
	        	#{workResidential} ,
	        	#{vehicle} ,
	        	#{motive} ,
	        	#{emphasis} ,
	        	#{demandProduct} ,
	        	#{demandHouse} ,
	        	#{demandDiscount} ,
	        	#{demandTotal} ,
	        	#{demandFllor} ,
	        	#{productReflect} ,
	        	#{productRecommendRoomNumber} ,
	        	#{productRecommendHouseType} ,
	        	#{productRecommendProportion} ,
	        	#{productRecommendUnitPrice} ,
	        	#{productRecommendTotalPrices} ,
	        	#{receivingRecords} ,
	        	#{clientRank} ,
	        	#{clientInauguration} ,
	        	#{inaugurationName} ,
	        	#{duty} ,
	        	#{clientState} ,
	        	#{imputTime} ,
	        	#{returnVisit} ,
	        	#{trace} ,
	        	#{bargain} ,
	        	#{unsubmittedFactor} ,
	        	#{confirm} ,
	        	#{remark} ,
	        	#{estateId} ,
	        	#{emphasisRests} ,
	        	#{clientInaugurationRests} ,
	        	#{unsubmittedFactorRests} ,
	        	#{counselor} ,
	        	#{informationRests}
	        )
	    ]]>
	</insert>

	<!-- 批量保存 -->
	<insert id="insertControlClientEnteringBatch">
		<![CDATA[
	        INSERT INTO control_client_entering (
	        	clientId,clientName,clientAge,clientGender,clientLooks,clientPhone,idCard,information,clientFamily,familyStructure,dwellResidential,workResidential,vehicle,motive,emphasis,demandProduct,demandHouse,demandDiscount,demandTotal,demandFllor,productReflect,productRecommendRoomNumber,productRecommendHouseType,productRecommendProportion,productRecommendUnitPrice,productRecommendTotalPrices,receivingRecords,clientRank,clientInauguration,inaugurationName,duty,clientState,imputTime,returnVisit,trace,bargain,unsubmittedFactor,confirm,remark,estateId,emphasisRests,clientInaugurationRests,unsubmittedFactorRests,counselor,informationRests
	        ) VALUES
	         ]]>
		<foreach item="item" collection="list" separator=",">
			(
			#{item.clientId} ,
			#{item.clientName} ,
			#{item.clientAge} ,
			#{item.clientGender} ,
			#{item.clientLooks} ,
			#{item.clientPhone} ,
			#{item.idCard} ,
			#{item.information} ,
			#{item.clientFamily} ,
			#{item.familyStructure} ,
			#{item.dwellResidential} ,
			#{item.workResidential} ,
			#{item.vehicle} ,
			#{item.motive} ,
			#{item.emphasis} ,
			#{item.demandProduct} ,
			#{item.demandHouse} ,
			#{item.demandDiscount} ,
			#{item.demandTotal} ,
			#{item.demandFllor} ,
			#{item.productReflect} ,
			#{item.productRecommendRoomNumber} ,
			#{item.productRecommendHouseType} ,
			#{item.productRecommendProportion} ,
			#{item.productRecommendUnitPrice} ,
			#{item.productRecommendTotalPrices} ,
			#{item.receivingRecords} ,
			#{item.clientRank} ,
			#{item.clientInauguration} ,
			#{item.inaugurationName} ,
			#{item.duty} ,
			#{item.clientState} ,
			#{item.imputTime} ,
			#{item.returnVisit} ,
			#{item.trace} ,
			#{item.bargain} ,
			#{item.unsubmittedFactor} ,
			#{item.confirm} ,
			#{item.remark} ,
			#{item.estateId} ,
			#{item.emphasisRests} ,
			#{item.clientInaugurationRests} ,
			#{item.unsubmittedFactorRests} ,
			#{item.counselor} ,
			#{item.informationRests}
			)
		</foreach>

	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<if
					test="clientName != null and clientName != ''">
				clientName = #{clientName}
				,
			</if>
			<if
					test="clientAge != null and clientAge != ''">
				clientAge = #{clientAge}
				,
			</if>
			<if
					test="clientGender != null and clientGender != ''">
				clientGender = #{clientGender}
				,
			</if>
			<if
					test="clientLooks != null and clientLooks != ''">
				clientLooks = #{clientLooks}
				,
			</if>
			<if
					test="clientPhone != null and clientPhone != ''">
				clientPhone = #{clientPhone}
				,
			</if>
			<if
					test="idCard != null and idCard != ''">
				idCard = #{idCard}
				,
			</if>
			<if
					test="information != null and information != ''">
				information = #{information}
				,
			</if>
			<if
					test="clientFamily != null and clientFamily != ''">
				clientFamily = #{clientFamily}
				,
			</if>
			<if
					test="familyStructure != null and familyStructure != ''">
				familyStructure = #{familyStructure}
				,
			</if>
			<if
					test="dwellResidential != null and dwellResidential != ''">
				dwellResidential = #{dwellResidential}
				,
			</if>
			<if
					test="workResidential != null and workResidential != ''">
				workResidential = #{workResidential}
				,
			</if>
			<if
					test="vehicle != null and vehicle != ''">
				vehicle = #{vehicle}
				,
			</if>
			<if
					test="motive != null and motive != ''">
				motive = #{motive}
				,
			</if>
			<if
					test="emphasis != null and emphasis != ''">
				emphasis = #{emphasis}
				,
			</if>
			<if
					test="demandProduct != null and demandProduct != ''">
				demandProduct = #{demandProduct}
				,
			</if>
			<if
					test="demandHouse != null and demandHouse != ''">
				demandHouse = #{demandHouse}
				,
			</if>
			<if
					test="demandDiscount != null and demandDiscount != ''">
				demandDiscount = #{demandDiscount}
				,
			</if>
			<if
					test="demandTotal != null and demandTotal != ''">
				demandTotal = #{demandTotal}
				,
			</if>
			<if
					test="demandFllor != null and demandFllor != ''">
				demandFllor = #{demandFllor}
				,
			</if>
			<if
					test="productReflect != null and productReflect != ''">
				productReflect = #{productReflect}
				,
			</if>
			<if
					test="productRecommendRoomNumber != null and productRecommendRoomNumber != ''">
				productRecommendRoomNumber = #{productRecommendRoomNumber}
				,
			</if>
			<if
					test="productRecommendHouseType != null and productRecommendHouseType != ''">
				productRecommendHouseType = #{productRecommendHouseType}
				,
			</if>
			<if
					test="productRecommendProportion != null and productRecommendProportion != ''">
				productRecommendProportion = #{productRecommendProportion}
				,
			</if>
			<if
					test="productRecommendUnitPrice != null and productRecommendUnitPrice != ''">
				productRecommendUnitPrice = #{productRecommendUnitPrice}
				,
			</if>
			<if
					test="productRecommendTotalPrices != null and productRecommendTotalPrices != ''">
				productRecommendTotalPrices = #{productRecommendTotalPrices}
				,
			</if>
			<if
					test="receivingRecords != null and receivingRecords != ''">
				receivingRecords = #{receivingRecords}
				,
			</if>
			<if test="clientRank != null">
				clientRank = #{clientRank} ,
			</if>
			<if
					test="clientInauguration != null and clientInauguration != ''">
				clientInauguration = #{clientInauguration}
				,
			</if>
			<if
					test="inaugurationName != null and inaugurationName != ''">
				inaugurationName = #{inaugurationName}
				,
			</if>
			<if
					test="duty != null and duty != ''">
				duty = #{duty}
				,
			</if>
			<if test="clientState != null">
				clientState = #{clientState} ,
			</if>
			<if test="imputTime != null">
				imputTime = #{imputTime} ,
			</if>
			<if test="returnVisit != null">
				returnVisit = #{returnVisit} ,
			</if>
			<if
					test="trace != null and trace != ''">
				trace = #{trace}
				,
			</if>
			<if test="bargain != null">
				bargain = #{bargain} ,
			</if>
			<if
					test="unsubmittedFactor != null and unsubmittedFactor != ''">
				unsubmittedFactor = #{unsubmittedFactor}
				,
			</if>
			<if
					test="confirm != null and confirm != ''">
				confirm = #{confirm}
				,
			</if>
			<if
					test="remark != null and remark != ''">
				remark = #{remark}
				,
			</if>
			<if
					test="estateId != null and estateId != ''">
				estateId = #{estateId}
				,
			</if>
			<if
					test="emphasisRests != null and emphasisRests != ''">
				emphasisRests = #{emphasisRests}
				,
			</if>
			<if
					test="clientInaugurationRests != null and clientInaugurationRests != ''">
				clientInaugurationRests = #{clientInaugurationRests}
				,
			</if>
			<if
					test="unsubmittedFactorRests != null and unsubmittedFactorRests != ''">
				unsubmittedFactorRests = #{unsubmittedFactorRests}
				,
			</if>
			<if
					test="counselor != null and counselor != ''">
				counselor = #{counselor}
				,
			</if>
			<if
					test="informationRests != null and informationRests != ''">
				informationRests = #{informationRests}

			</if>
		</set>
	</sql>

	<!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->
	<!-- where 条件组合 -->
	<sql id="where_sql">
		<where>
			<if
					test="controlClientEntering.clientName != null and controlClientEntering.clientName != ''">
				clientName = #{controlClientEntering.clientName}
			</if>
			<if
					test="controlClientEntering.clientAge != null and controlClientEntering.clientAge != ''">
				and clientAge = #{controlClientEntering.clientAge}
			</if>
			<if
					test="controlClientEntering.clientGender != null and controlClientEntering.clientGender != ''">
				and clientGender = #{controlClientEntering.clientGender}
			</if>
			<if
					test="controlClientEntering.clientLooks != null and controlClientEntering.clientLooks != ''">
				and clientLooks = #{controlClientEntering.clientLooks}
			</if>
			<if
					test="controlClientEntering.clientPhone != null and controlClientEntering.clientPhone != ''">
				and clientPhone = #{controlClientEntering.clientPhone}
			</if>
			<if
					test="controlClientEntering.idCard != null and controlClientEntering.idCard != ''">
				and idCard = #{controlClientEntering.idCard}
			</if>
			<if
					test="controlClientEntering.information != null and controlClientEntering.information != ''">
				and information = #{controlClientEntering.information}
			</if>
			<if
					test="controlClientEntering.clientFamily != null and controlClientEntering.clientFamily != ''">
				and clientFamily = #{controlClientEntering.clientFamily}
			</if>
			<if
					test="controlClientEntering.familyStructure != null and controlClientEntering.familyStructure != ''">
				and familyStructure = #{controlClientEntering.familyStructure}
			</if>
			<if
					test="controlClientEntering.dwellResidential != null and controlClientEntering.dwellResidential != ''">
				and dwellResidential = #{controlClientEntering.dwellResidential}
			</if>
			<if
					test="controlClientEntering.workResidential != null and controlClientEntering.workResidential != ''">
				and workResidential = #{controlClientEntering.workResidential}
			</if>
			<if
					test="controlClientEntering.vehicle != null and controlClientEntering.vehicle != ''">
				and vehicle = #{controlClientEntering.vehicle}
			</if>
			<if
					test="controlClientEntering.motive != null and controlClientEntering.motive != ''">
				and motive = #{controlClientEntering.motive}
			</if>
			<if
					test="controlClientEntering.emphasis != null and controlClientEntering.emphasis != ''">
				and emphasis = #{controlClientEntering.emphasis}
			</if>
			<if
					test="controlClientEntering.demandProduct != null and controlClientEntering.demandProduct != ''">
				and demandProduct = #{controlClientEntering.demandProduct}
			</if>
			<if
					test="controlClientEntering.demandHouse != null and controlClientEntering.demandHouse != ''">
				and demandHouse = #{controlClientEntering.demandHouse}
			</if>
			<if
					test="controlClientEntering.demandDiscount != null and controlClientEntering.demandDiscount != ''">
				and demandDiscount = #{controlClientEntering.demandDiscount}
			</if>
			<if
					test="controlClientEntering.demandTotal != null and controlClientEntering.demandTotal != ''">
				and demandTotal = #{controlClientEntering.demandTotal}
			</if>
			<if
					test="controlClientEntering.demandFllor != null and controlClientEntering.demandFllor != ''">
				and demandFllor = #{controlClientEntering.demandFllor}
			</if>
			<if
					test="controlClientEntering.productReflect != null and controlClientEntering.productReflect != ''">
				and productReflect = #{controlClientEntering.productReflect}
			</if>
			<if
					test="controlClientEntering.productRecommendRoomNumber != null and controlClientEntering.productRecommendRoomNumber != ''">
				and productRecommendRoomNumber = #{controlClientEntering.productRecommendRoomNumber}
			</if>
			<if
					test="controlClientEntering.productRecommendHouseType != null and controlClientEntering.productRecommendHouseType != ''">
				and productRecommendHouseType = #{controlClientEntering.productRecommendHouseType}
			</if>
			<if
					test="controlClientEntering.productRecommendProportion != null and controlClientEntering.productRecommendProportion != ''">
				and productRecommendProportion = #{controlClientEntering.productRecommendProportion}
			</if>
			<if
					test="controlClientEntering.productRecommendUnitPrice != null and controlClientEntering.productRecommendUnitPrice != ''">
				and productRecommendUnitPrice = #{controlClientEntering.productRecommendUnitPrice}
			</if>
			<if
					test="controlClientEntering.productRecommendTotalPrices != null and controlClientEntering.productRecommendTotalPrices != ''">
				and productRecommendTotalPrices = #{controlClientEntering.productRecommendTotalPrices}
			</if>
			<if
					test="controlClientEntering.receivingRecords != null and controlClientEntering.receivingRecords != ''">
				and receivingRecords = #{controlClientEntering.receivingRecords}
			</if>
			<if test="controlClientEntering.clientRank != null">
				and  clientRank = #{controlClientEntering.clientRank}
			</if>
			<if
					test="controlClientEntering.clientInauguration != null and controlClientEntering.clientInauguration != ''">
				and clientInauguration = #{controlClientEntering.clientInauguration}
			</if>
			<if
					test="controlClientEntering.inaugurationName != null and controlClientEntering.inaugurationName != ''">
				and inaugurationName = #{controlClientEntering.inaugurationName}
			</if>
			<if
					test="controlClientEntering.duty != null and controlClientEntering.duty != ''">
				and duty = #{controlClientEntering.duty}
			</if>
			<if test="controlClientEntering.clientState != null">
				and  clientState = #{controlClientEntering.clientState}
			</if>
			<if test="controlClientEntering.imputTime != null">
				and imputTime = #{controlClientEntering.imputTime}
			</if>
			<if test="controlClientEntering.returnVisit != null">
				and  returnVisit = #{controlClientEntering.returnVisit}
			</if>
			<if
					test="controlClientEntering.trace != null and controlClientEntering.trace != ''">
				and trace = #{controlClientEntering.trace}
			</if>
			<if test="controlClientEntering.bargain != null">
				and  bargain = #{controlClientEntering.bargain}
			</if>
			<if
					test="controlClientEntering.unsubmittedFactor != null and controlClientEntering.unsubmittedFactor != ''">
				and unsubmittedFactor = #{controlClientEntering.unsubmittedFactor}
			</if>
			<if
					test="controlClientEntering.confirm != null and controlClientEntering.confirm != ''">
				and confirm = #{controlClientEntering.confirm}
			</if>
			<if
					test="controlClientEntering.remark != null and controlClientEntering.remark != ''">
				and remark = #{controlClientEntering.remark}
			</if>
			<if
					test="controlClientEntering.estateId != null and controlClientEntering.estateId != ''">
				and estateId = #{controlClientEntering.estateId}
			</if>
			<if
					test="controlClientEntering.emphasisRests != null and controlClientEntering.emphasisRests != ''">
				and emphasisRests = #{controlClientEntering.emphasisRests}
			</if>
			<if
					test="controlClientEntering.clientInaugurationRests != null and controlClientEntering.clientInaugurationRests != ''">
				and clientInaugurationRests = #{controlClientEntering.clientInaugurationRests}
			</if>
			<if
					test="controlClientEntering.unsubmittedFactorRests != null and controlClientEntering.unsubmittedFactorRests != ''">
				and unsubmittedFactorRests = #{controlClientEntering.unsubmittedFactorRests}
			</if>
			<if
					test="controlClientEntering.counselor != null and controlClientEntering.counselor != ''">
				and counselor = #{controlClientEntering.counselor}
			</if>
			<if
					test="controlClientEntering.informationRests != null and controlClientEntering.informationRests != ''">
				and informationRests = #{controlClientEntering.informationRests}
			</if>
		</where>
	</sql>
	<!-- 修改 -->
	<update id="updateControlClientEnteringById">
		UPDATE control_client_entering
		<include refid="update_sql" />
		WHERE
		clientId =
		#{clientId} 	</update>

	<!-- 根据ID删除 -->
	<!--<delete id="deleteControlClientEnteringById">
		DELETE FROM control_client_entering
		WHERE
		clientId = #{clientId} 	</delete>
-->
	<delete id="deleteControlClientEnteringById">
		delete from control_client_entering where clientId in
		<foreach collection="ids" item="clientId" separator="," open="(" close=")">
			#{clientId}
		</foreach>
	</delete>

	<!-- selsect -->
	<select id="getControlClientEnteringById" resultType="com.bdcourtyard.business.clientmessage.model.ControlClientEntering">
		SELECT
		<include refid="columns" />
		FROM control_client_entering
		WHERE
		clientId = #{clientId} 	</select>

	<!-- selsect -->
	<select id="getControlClientEnterings" resultType="com.bdcourtyard.business.clientmessage.model.ControlClientEntering">
		SELECT
		<include refid="columns" />
		FROM control_client_entering
		<include refid="where_sql" />
	</select>
	
			<!-- selsect -->
	<select id="getControlClientEnteringsForPage" resultType="com.bdcourtyard.business.clientmessage.model.ControlClientEntering">
		SELECT
		<include refid="columns" />
		FROM control_client_entering
		<include refid="where_sql" />
	</select>

	<select id="getControlClientEnteringsByConditions" resultType="com.bdcourtyard.business.clientmessage.model.ControlClientEntering">
		SELECT
		<include refid="columns" />
		FROM control_client_entering
		WHERE 
			1 =1
		<foreach collection="conditions" item="condition">
			${condition.exp}
		</foreach>
	</select>


	<!--模糊查询 -->
	<select id="getControlClientEnterings_new" resultType="com.bdcourtyard.business.clientmessage.model.ControlClientEntering" parameterType="java.util.HashMap">
		SELECT
		<include refid="columns" />
		FROM control_client_entering
		WHERE
		1 =1
		<if test="clientId!=null and clientId!=''">
			and clientId like CONCAT('%',#{clientId},'%' )
		</if>
		<if test="clientName!=null and clientName!=''">
			and clientName like CONCAT('%',#{clientName},'%' )
		</if>
		<if test="clientPhone!=null and clientPhone!=''">
			and clientPhone like CONCAT('%',#{clientPhone},'%' )
		</if>
		<if test="clientState!=null">
			and clientState =#{clientState}
		</if>
		<if test="bargain!=null">
			and bargain =#{bargain}
		</if>
		<if test="startTime != null and startTime != ''">
			and imputTime &gt;= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
			and imputTime &lt;= #{endTime}
		</if>
		ORDER by imputTime desc
	</select>


	<!--有效客户列表模糊查询 -->
	<select id="getControlClientEnterings_valid" resultType="com.bdcourtyard.business.clientmessage.model.ControlClientEntering" parameterType="java.util.HashMap">
		SELECT
		c.clientId,c.clientName,c.clientAge,c.clientGender,c.clientLooks,c.clientPhone,c.idCard,c.information,c.clientFamily,c.familyStructure,c.dwellResidential,c.workResidential,c.vehicle,c.motive,c.emphasis,c.demandProduct,c.demandHouse,c.demandDiscount,c.demandTotal,c.demandFllor,c.productReflect,c.productRecommendRoomNumber,c.productRecommendHouseType,c.productRecommendProportion,c.productRecommendUnitPrice,c.productRecommendTotalPrices,c.receivingRecords,c.clientRank,c.clientInauguration,c.inaugurationName,c.duty,c.clientState,c.imputTime,c.returnVisit,c.trace,c.bargain,c.unsubmittedFactor,c.confirm,c.remark,c.estateId,c.emphasisRests,c.clientInaugurationRests,c.unsubmittedFactorRests,c.counselor
		FROM control_client_entering c,client_needreturn t
		WHERE
		c.clientId =t.clientId
		<if test="returnTimeId==1">
			AND to_days(t.needreturnTime) = to_days(now())
		</if>
		<if test="returnTimeId==2">
			<![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 3 DAY) <= date(t.needreturnTime)]]>
		</if>
		<if test="returnTimeId==3">
			<![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 7 DAY)<=date(t.needreturnTime)]]>
		</if>
		<if test="returnTimeId==4">
			<![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 15 DAY) <= date(t.needreturnTime)]]>
		</if>
		<if test="returnTimeId==5">
			<![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 30 DAY) <= date(t.needreturnTime)]]>
		</if>
		<if test="clientId!=null and clientId!=''">
			and c.clientId like CONCAT('%',#{clientId},'%' )
		</if>
		<if test="clientName!=null and clientName!=''">
			and c.clientName like CONCAT('%',#{clientName},'%' )
		</if>
		<if test="clientPhone!=null and clientPhone!=''">
			and c.clientPhone like CONCAT('%',#{clientPhone},'%' )
		</if>
		<if test="startTime != null and startTime != ''">
			and t.needreturnTime &gt;= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
			and t.needreturnTime &lt;= #{endTime}
		</if>
		ORDER by t.needreturnTime desc
	</select>
</mapper>

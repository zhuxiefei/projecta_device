<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdcourtyard.business.account.dao.EmployeeRolePrivilegeRelaDao">


	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		rpRela,roleId,privilegeId,createTime
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insertEmployeeRolePrivilegeRela">
	    <![CDATA[
	        INSERT INTO employee_role_privilege_rela ( 
	        	rpRela,roleId,privilegeId,createTime
	        ) VALUES (
	        	#{rpRela} ,
	        	#{roleId} ,
	        	#{privilegeId} ,
	        	#{createTime} 
	        )
	    ]]>
	</insert>

	<!-- 批量保存 -->
	<insert id="insertEmployeeRolePrivilegeRelaBatch">
	    <![CDATA[
	        INSERT INTO employee_role_privilege_rela (
	        	rpRela,roleId,privilegeId,createTime
	        ) VALUES 
	         ]]>
		<foreach item="item" collection="list" separator=",">
			(
						#{item.rpRela} ,
						#{item.roleId} ,
						#{item.privilegeId} ,
						#{item.createTime} 
			)
		</foreach>

	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<if
				test="roleId != null and roleId != ''">
				roleId = #{roleId}
				,
			</if>
			<if
				test="privilegeId != null and privilegeId != ''">
				privilegeId = #{privilegeId}
				,
			</if>
			<if test="createTime != null">
				createTime = #{createTime} 
			</if>
		</set>
	</sql>

    <!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->
	<!-- where 条件组合 -->
	<sql id="where_sql">
		<where>
			<if
				test="employeeRolePrivilegeRela.roleId != null and employeeRolePrivilegeRela.roleId != ''">
				roleId = #{employeeRolePrivilegeRela.roleId}				 
			</if>
			<if
				test="employeeRolePrivilegeRela.privilegeId != null and employeeRolePrivilegeRela.privilegeId != ''">
				 and privilegeId = #{employeeRolePrivilegeRela.privilegeId}				 
			</if>
			<if test="employeeRolePrivilegeRela.createTime != null">
				 and createTime = #{employeeRolePrivilegeRela.createTime} 
			</if>
		</where>
	</sql>

	<!-- 修改 -->
	<update id="updateEmployeeRolePrivilegeRelaById">
		UPDATE employee_role_privilege_rela
		<include refid="update_sql" />
		WHERE
		rpRela =
		#{rpRela} 	</update>

	<!-- 根据ID删除 -->
	<delete id="deleteEmployeeRolePrivilegeRelaById">
		DELETE FROM employee_role_privilege_rela
		WHERE
		rpRela = #{rpRela} 	</delete>



	<!-- selsect -->
	<select id="getEmployeeRolePrivilegeRelaById" resultType="com.bdcourtyard.business.account.model.EmployeeRolePrivilegeRela">
		SELECT
		<include refid="columns" />
		FROM employee_role_privilege_rela
		WHERE
		rpRela = #{rpRela} 	</select>

	<!-- selsect -->
	<select id="getEmployeeRolePrivilegeRelas" resultType="com.bdcourtyard.business.account.model.EmployeeRolePrivilegeRela">
		SELECT
		<include refid="columns" />
		FROM employee_role_privilege_rela
		<include refid="where_sql" />
	</select>
	
			<!-- selsect -->
	<select id="getEmployeeRolePrivilegeRelasForPage" resultType="com.bdcourtyard.business.account.model.EmployeeRolePrivilegeRela">
		SELECT
		<include refid="columns" />
		FROM employee_role_privilege_rela
		<include refid="where_sql" />
	</select>

	<select id="getEmployeeRolePrivilegeRelasByConditions" resultType="com.bdcourtyard.business.account.model.EmployeeRolePrivilegeRela">
		SELECT
		<include refid="columns" />
		FROM employee_role_privilege_rela
		WHERE 
			1 =1
		<foreach collection="conditions" item="condition">
			${condition.exp}
		</foreach>
	</select>

	<select id="findParentPrivileges" resultType="com.bdcourtyard.business.account.model.EmployeePrivilege"
			parameterType="java.lang.String">
		SELECT
		p.privilegeId privilegeId,
		p.privilegeDesc privilegeName
		FROM
		employee_role_privilege_rela r
		LEFT JOIN employee_privilege p ON r.privilegeId = p.privilegeId
		WHERE
		r.roleId = #{roleId}
		AND p.privilegeType IN (1,2,4)
	</select>

	<delete id="deteleByRoleId" parameterType="java.lang.String">
		delete from employee_role_privilege_rela
		where roleId = #{roleId}
	</delete>

	<insert id="insertRolePrivileges">
		insert into employee_role_privilege_rela (rpRela,roleId, privilegeId,
		createTime)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.rpRela},#{item.roleId}, #{item.privilegeId}
			,#{item.createTime})
		</foreach>
	</insert>
</mapper>
